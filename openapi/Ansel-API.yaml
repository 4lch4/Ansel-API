openapi: 3.0.0
info:
  title: Ansel-API
  version: '1.0.0'
  # summary: An API for interacting with S3/B2 compatible storage methods # For OpenAPI 3.1.0
  description: Ansel is an API for interacting with S3/B2 compatible storage mediums. Provides endpoints for uploading, updating, retrieving, and deleting assets within the storage medium.
  contact:
    name: 4lch4
    url: https://4lch4.social
    email: ansel@4lch4.email
  license:
    name: GPL-3.0-only
    url: https://spdx.org/licenses/GPL-3.0-only.html
    # identifier: GPL-3.0-only # For OpenAPI 3.1.0

externalDocs:
  url: https://docs.ansel.cloud

tags:
  - name: Assets
    description: Operations related to assets/blobs.
  - name: Meta
    description: Operations related to the Ansel API itself.

servers:
  - url: http://localhost:8080
    description: Local Test
  - url: https://test.ansel.cloud
    description: Ansel Test
  - url: https://ansel.cloud
    description: Ansel Prod

paths:
  /list:
    get:
      description: Lists all of the top-level folders within a given bucket. Useful for organizing.
      operationId: listFolders
      summary: List Folders w/in a Bucket.
      tags: [Assets]
      responses:
        '200':
          $ref: '#/components/responses/FolderListOKResponse'
        '500':
          description: Internal Server Error

  /list/:name:
    get:
      description: List all of the folders within a given folder.
      operationId: listFoldersWithinFolder
      summary: List folders w/in a folder.
      tags: [Assets]
      parameters:
        - $ref: '#/components/parameters/FolderName'
      responses:
        '200':
          $ref: '#/components/responses/FolderListOKResponse'

  /:name:
    get:
      description: Gets a random asset from the folder with the name given by the parameter value.
      operationId: getRandomAsset
      summary: Retrieves a random asset from a given folder.
      tags: [Assets]
      parameters:
        - $ref: '#/components/parameters/FolderName'
      responses:
        '200':
          $ref: '#/components/responses/AssetOKResponse'

    post:
      description: Upload an asset to the given folder and assign it the next ID in the sequence.
      operationId: uploadAsset
      summary: Upload a new asset to a given folder.
      tags: [Assets]
      parameters:
        - $ref: '#/components/parameters/FolderName'
      responses:
        '200':
          $ref: '#/components/responses/EmptyOKResponse'

  /:name/:id:
    get:
      description: Retrieves an asset from the folder with the given name, with the given ID.
      operationId: getAsset
      summary: Retrieve a specific asset from a given folder.
      tags: [Assets]
      parameters:
        - $ref: '#/components/parameters/FolderName'
        - $ref: '#/components/parameters/AssetId'
      responses:
        '200':
          $ref: '#/components/responses/AssetOKResponse'

    post:
      description: Upload a new asset to the given folder with the given ID.
      operationId: uploadAssetById
      summary: Upload an asset to the given folder and assign the given ID.
      tags: [Assets]
      parameters:
        - $ref: '#/components/parameters/FolderName'
        - $ref: '#/components/parameters/AssetId'
      responses:
        '200':
          $ref: '#/components/responses/EmptyOKResponse'

    put:
      description: Update an existing asset from the given folder with the given ID.
      operationId: updateAsset
      summary: Update an existing asset, w/in the folder with the given name, w/ the given ID.
      tags: [Assets]
      parameters:
        - $ref: '#/components/parameters/FolderName'
        - $ref: '#/components/parameters/AssetId'
      responses:
        '200':
          $ref: '#/components/responses/EmptyOKResponse'

    delete:
      description: Delete the asset within the given folder with the given ID.
      operationId: deleteAsset
      summary: Delete a given asset from a given folder.
      tags: [Assets]
      parameters:
        - $ref: '#/components/parameters/FolderName'
        - $ref: '#/components/parameters/AssetId'
      responses:
        '200':
          $ref: '#/components/responses/EmptyOKResponse'

components:
  responses:
    AssetOKResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssetUrl'

    EmptyOKResponse:
      description: OK
      content:
        text/plain:
          schema:
            type: string
            description: The message body.
            example: OK

    FolderListOKResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FolderList'

  parameters:
    AssetId:
      name: id
      in: query
      required: true
      description: The ID of the specific asset you wish to interact with.
      schema:
        type: string

    FolderName:
      name: name
      in: query
      required: true
      description: The name of the folder containing the asset/blob.
      schema:
        type: string
      examples:
        Simple:
          description: For referencing a root-level folder.
          summary: Reference a root-level folder.
          value: alcha
        Nested:
          description: |
            If you need to reference folders within a nested directory: Use
            slashes and omit a trailing-slash.
          summary: Referencing a nested directory.
          value: alcha/poke/0

  schemas:
    AssetUrl:
      type: string
      description: The URL that is associated with a given asset/blob.
      example: https://ansel.4lch4.tech/confused/confused-1.gif

    FolderList:
      type: object
      description: An object containing an array of the root folder names.
      properties:
        count:
          type: number
          description: The amount of folders available.
        data:
          type: array
          description: An array of folder names.
          uniqueItems: true
          items:
            type: string
      required:
        - count
        - data
      example:
        count: 54
        data:
          - alcha
          - bite
          - blush
          - cats
          - ...
